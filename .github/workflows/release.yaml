name: Release Workflow

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout the repository
        uses: actions/checkout@v2
        with:
          path: .

      - name: üî¢ Get release version
        id: version
        uses: home-assistant/actions/helpers/version@master

      - name: üñäÔ∏è Set version number
        run: |
          jq '.version = "${{ steps.version.outputs.version }}"' \
            "${{ github.workspace }}/custom_components/Pluggit-Pro/manifest.json" > tmp \
            && mv -f tmp "${{ github.workspace }}/custom_components/Pluggit-Pro/manifest.json"

      - name: üëÄ Validate data
        run: |
          manifestversion=$(jq -r '.version' ${{ github.workspace }}/custom_components/Pluggit-Pro/manifest.json)
          if [ "$manifestversion" != "${{ steps.version.outputs.version }}" ]; then
            echo "The version in custom_components/Pluggit-Pro/manifest.json was not correct"
            echo "$manifestversion"
            exit 1
          fi

      - name: üì¶ Create zip file for the integration
        run: |
          cd "${{ github.workspace }}/custom_components/Pluggit-Pro"
          zip -r pluggit-pro.zip ./

      - name: üîç Debug GITHUB_TOKEN
        run: echo "GITHUB_TOKEN is set"
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: üì§ Upload the zip file as a release asset
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: "${{ github.event.release.upload_url }}"
          asset_path: "${{ github.workspace }}/custom_components/Pluggit-Pro/pluggit-pro.zip"
          asset_name: pluggit-pro.zip
          asset_content_type: application/zip
